name: test-ssla-certs
on:
#   workflow_dispatch:
  push:
    branches:
      - main

jobs:   
  ssla-certs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4  


    - name: Download Previous Execution Artificats.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        OTHER_REPO="upendraddev/azuredev"
        REPO_OWNER="upendraddev"
        REPO_NAME="azuredev"
        WF_NAME="test-ssla-certs"
        ARTIFACT_NAME="SO-Files"
        FILE_TYPE=".csv"
        RUN_ID="7700153957"
        # Get the artifact ID
        ARTIFACT_ID=$(gh api repos/$REPO_OWNER/$REPO_NAME/actions/runs/$RUN_ID/artifacts | jq -r --arg ARTIFACT_NAME "$ARTIFACT_NAME" '.artifacts | map(select(.name == $ARTIFACT_NAME))[0].id')

        # Download the artifact as a zip file
        gh api repos/$REPO_OWNER/$REPO_NAME/actions/artifacts/$ARTIFACT_ID/zip --header 'Accept: application/vnd.github.v3+zip' --output artifact.zip

        # Extract files from the zip file
        unzip -q artifact.zip -d artifact_content

        # Check for the presence of files with the specified file type
        if find artifact_content -type f -name "*$FILE_TYPE" | grep -q .; then
          echo "Artifact contains files of type $FILE_TYPE."
        else
          echo "No files of type $FILE_TYPE found in the artifact."
        fi
        # Clean up: remove downloaded zip file and extracted content
        rm artifact.zip
        rm -r artifact_content

    # - name: Retrive runid
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   run: |
    #     bash ./testfolder/retrieve_artifacts_csv.sh \

    # - name: Script Execution For Certificate Operations
    #   run: |
    #     ChipIDC="Aid-0005-000000000007,Aid-0005-000000000003,Aid-0005-000000000004,Aid-0005-000000000005,Aid-0005-000000000008"
    #     ChipIDContent=$(echo $ChipIDC | tr "," "\n")
    #     ChipIDCount=5
    #     Token="hdbzvb"
    #     timestamp=$(date +%Y%m%d%H%M%S)
    #     Dirname=${timestamp}-SOFiles
    #     CSVFilename=${timestamp}-SO_Outputs.csv
    #     echo "ChipID,No of time requested" > ./opsjob/"$CSVFilename"; \
    #     mkdir -p ./opsjob/${Dirname}
    #     for ChipID in $ChipIDContent
    #     do
    #         bash ./opsjob/scripts/run_sssla_cetificate_operations.sh \
    #         "https://aig-tri-sand.com" \
    #         "$ChipID" \
    #         "$Token"  \
    #         "$Dirname" \
    #         "$CSVFilename"
    #     done
    #     sudo apt install pwgen -y
    #     PASSPHRASE=$(pwgen 12 1)
    #     cd opsjob
    #     echo ${PASSPHRASE} >>./password.txt
    #     sudo apt install p7zip-full -y
    #     7za a -tzip -p${PASSPHRASE} -mem=AES256 ${Dirname}.zip ${Dirname}
          
    # - uses: actions/upload-artifact@v4
    #   if: ${{ always() }}
    #   with:
    #     name: SO-Files
    #     path: |
    #       ./opsjob/*.csv
    #       ./opsjob/password.txt
    #       ./opsjob/*.zip 

    # - uses: actions/download-artifact@v4
    #   with:
    #     path: ./opsjob/*.csv
    # - name: Display structure of downloaded files
    #   run: ls -R ./opsjob/*.csv

          
